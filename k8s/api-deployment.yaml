apiVersion: apps/v1
kind: Deployment
metadata:
  name: tickets-api-deployment
  namespace: tickets-system
  labels:
    app: tickets-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: tickets-api
  template:
    metadata:
      labels:
        app: tickets-api
    spec:
      containers:
      - name: tickets-api
        image: tickets-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3010
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: tickets-api-config
              key: NODE_ENV
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: tickets-api-config
              key: API_PORT
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)"
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: tickets-api-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: tickets-api-config
              key: POSTGRES_PORT
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: tickets-api-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: tickets-api-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tickets-api-secrets
              key: POSTGRES_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: tickets-api-secrets
              key: JWT_SECRET
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: tickets-api-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: tickets-api-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tickets-api-secrets
              key: REDIS_PASSWORD
        livenessProbe:
          httpGet:
            path: /health
            port: 3010
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3010
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m" 